name: 🧪 Tests

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/test.yml'
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/test.yml'

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]  # Start with just Linux to avoid cross-platform issues
        python-version: ['3.12']  # Focus on one stable version first
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    env:
      DATABASE_URL: postgresql+asyncpg://testuser:testpassword@localhost:5432/testdb
      SECRET_KEY: test-secret-key-for-ci-only
      ENVIRONMENT: testing
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 📦 Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    
    - name: 🔧 Install dependencies
      working-directory: ./backend
      run: |
        uv sync --dev
    
    - name: 🗄️ Run migrations
      working-directory: ./backend
      run: |
        uv run --frozen alembic upgrade head
    
    - name: 🧪 Run tests
      working-directory: ./backend
      run: |
        uv run --frozen pytest -v \
          --cov=api \
          --cov=core \
          --cov=models \
          --cov=schemas \
          --cov=services \
          --cov-report=xml \
          --cov-report=term-missing \
          --cov-fail-under=60
    
    - name: 📊 Upload coverage
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
      with:
        file: ./backend/coverage.xml
        fail_ci_if_error: false

  lint:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: 📦 Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    
    - name: 🔧 Install dependencies
      working-directory: ./backend
      run: |
        uv sync --dev
    
    - name: 🔍 Run ruff (linting)
      working-directory: ./backend
      run: |
        uv run --frozen ruff check .
    
    - name: 🎨 Run ruff (formatting)
      working-directory: ./backend
      run: |
        uv run --frozen ruff format --check .
    
    - name: 🔒 Run bandit (security)
      working-directory: ./backend
      run: |
        uv run --frozen bandit -r . -f json -o bandit-report.json || true
        uv run --frozen bandit -r . -f txt || true
      continue-on-error: true