"""Add employees table with user relationship

Revision ID: 3be6a6596f05
Revises: cb1b89f6a33a
Create Date: 2025-10-07 21:18:37.500731

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3be6a6596f05'
down_revision: Union[str, Sequence[str], None] = 'cb1b89f6a33a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=255), nullable=True),
    sa.Column('join_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.alter_column('onboarding', 'user_id',
               existing_type=sa.INTEGER(),
               comment='Associated user ID - one onboarding per user',
               existing_nullable=False)
    op.alter_column('onboarding', 'company_name',
               existing_type=sa.VARCHAR(length=255),
               comment='Company name as entered by user',
               existing_nullable=False)
    op.alter_column('onboarding', 'company_domain',
               existing_type=sa.VARCHAR(length=100),
               comment='Company subdomain (unique across all tenants)',
               existing_nullable=False)
    op.alter_column('onboarding', 'company_size',
               existing_type=sa.VARCHAR(length=50),
               comment='Company size category (1-10, 11-50, etc.)',
               existing_nullable=False)
    op.alter_column('onboarding', 'onboarding_completed',
               existing_type=sa.BOOLEAN(),
               comment='Whether onboarding process is completed',
               existing_nullable=False)
    op.alter_column('onboarding', 'workspace_created',
               existing_type=sa.BOOLEAN(),
               comment='Whether company workspace has been created',
               existing_nullable=False)
    op.alter_column('onboarding', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Onboarding creation timestamp',
               existing_nullable=False)
    op.alter_column('onboarding', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Last onboarding update timestamp',
               existing_nullable=False)
    op.drop_constraint(op.f('onboarding_company_domain_key'), 'onboarding', type_='unique')
    op.drop_constraint(op.f('onboarding_user_id_key'), 'onboarding', type_='unique')
    op.create_index(op.f('ix_onboarding_company_domain'), 'onboarding', ['company_domain'], unique=True)
    op.create_index(op.f('ix_onboarding_user_id'), 'onboarding', ['user_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_onboarding_user_id'), table_name='onboarding')
    op.drop_index(op.f('ix_onboarding_company_domain'), table_name='onboarding')
    op.create_unique_constraint(op.f('onboarding_user_id_key'), 'onboarding', ['user_id'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('onboarding_company_domain_key'), 'onboarding', ['company_domain'], postgresql_nulls_not_distinct=False)
    op.alter_column('onboarding', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Last onboarding update timestamp',
               existing_nullable=False)
    op.alter_column('onboarding', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Onboarding creation timestamp',
               existing_nullable=False)
    op.alter_column('onboarding', 'workspace_created',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Whether company workspace has been created',
               existing_nullable=False)
    op.alter_column('onboarding', 'onboarding_completed',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Whether onboarding process is completed',
               existing_nullable=False)
    op.alter_column('onboarding', 'company_size',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Company size category (1-10, 11-50, etc.)',
               existing_nullable=False)
    op.alter_column('onboarding', 'company_domain',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Company subdomain (unique across all tenants)',
               existing_nullable=False)
    op.alter_column('onboarding', 'company_name',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='Company name as entered by user',
               existing_nullable=False)
    op.alter_column('onboarding', 'user_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Associated user ID - one onboarding per user',
               existing_nullable=False)
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_table('employees')
    # ### end Alembic commands ###
